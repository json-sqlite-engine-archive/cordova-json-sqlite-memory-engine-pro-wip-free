/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/JavaEmitter.java on Sun Aug 25 17:33:01 EDT 2019 ----! */

package io.sqlc;

//import com.jogamp.gluegen.runtime.*;
//import com.jogamp.common.os.*;
//import com.jogamp.common.nio.*;
//import java.nio.*;

public class JSQLCOREPRONDKWrapper {

  public static final int JSQL_PRO_API_VERSION = -1999999999;
  public static final int JSQL_OPEN_READONLY = 0x00001;
  public static final int JSQL_OPEN_READWRITE = 0x00002;
  public static final int JSQL_OPEN_CREATE = 0x00004;
  public static final int JSQL_OPEN_URI = 0x00040;
  public static final int JSQL_OPEN_MEMORY = 0x00080;
  public static final int JSQL_OPEN_NOMUTEX = 0x08000;
  public static final int JSQL_OPEN_FULLMUTEX = 0x10000;
  public static final int JSQL_OPEN_SHAREDCACHE = 0x20000;
  public static final int JSQL_OPEN_PRIVATECACHE = 0x40000;
  public static final int JSQL_RESULT_OK = 0;
  public static final int JSQL_RESULT_ERROR = 1;
  public static final int JSQL_RESULT_INTERNAL = 2;
  public static final int JSQL_RESULT_PERM = 3;
  public static final int JSQL_RESULT_ABORT = 4;
  public static final int JSQL_RESULT_CONSTRAINT = 19;
  public static final int JSQL_RESULT_MISMATCH = 20;
  public static final int JSQL_RESULT_MISUSE = 21;
  public static final int JSQL_RESULT_ROW = 100;
  public static final int JSQL_RESULT_DONE = 101;
  public static final int JSQL_INTEGER = 1;
  public static final int JSQL_FLOAT = 2;
  public static final int JSQL_TEXT = 3;
  public static final int JSQL_BLOB = 4;
  public static final int JSQL_NULL = 5;

  /** Interface to C language function: <br> <code> jsql_handle_t jsql_pro_db_open(int jsql_pro_api_version, const char *  filename, int flags); </code>    */
  public static native long jsql_pro_db_open(int jsql_pro_api_version, String filename, int flags);

  /** Interface to C language function: <br> <code> const char *  jsql_pro_execute(jsql_handle_t dbHandle, const char *  batch_json, int ll); </code>    */
  public static native String jsql_pro_execute(long dbHandle, String batch_json, int ll);

  /** Interface to C language function: <br> <code> void jsql_pro_internal_cleanup(jsql_handle_t dbHandle); </code>    */
  public static native void jsql_pro_internal_cleanup(long dbHandle);


} // end of class JSQLCOREPRONDKWrapper
